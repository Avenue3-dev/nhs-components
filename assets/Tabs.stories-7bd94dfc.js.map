{"version":3,"file":"Tabs.stories-7bd94dfc.js","sources":["../../../../packages/nhsuk-frontend-react/src/lib/experimental/components/content-presentation/tabs/TabsContext.tsx","../../../../packages/nhsuk-frontend-react/src/lib/experimental/components/content-presentation/tabs/Tabs.tsx"],"sourcesContent":["import { createContext, useContext } from 'react'\n\ntype TabsContextValue = {\n  selectedTab: string\n  setSelectedTab: (id: string) => void\n}\n\nexport const TabsContext = createContext<TabsContextValue>({\n  selectedTab: '',\n  setSelectedTab: () => {},\n})\n\nTabsContext.displayName = 'TabsContext'\n\nexport const useTabsContext = () => useContext(TabsContext)\n","import React, {\n  HTMLProps,\n  PropsWithChildren,\n  ReactElement,\n  useState,\n} from 'react'\nimport clsx from 'clsx'\nimport { TabsContext, useTabsContext } from './TabsContext'\nimport useIdWithPrefix from '@/hooks/use-id-with-prefix'\n\ntype TabsProps = {\n  title?: string\n  titleProps?: HTMLProps<HTMLHeadingElement>\n  listProps?: HTMLProps<HTMLUListElement>\n} & HTMLProps<HTMLDivElement>\n\ntype Tabs = {\n  Title: typeof TabListItem\n  Tab: typeof Tab\n  Panel: typeof TabPanel\n} & React.FC<TabsProps>\n\ntype TabListItemProps = {\n  _targetId?: string\n  listItemProps?: HTMLProps<HTMLLIElement>\n} & Omit<HTMLProps<HTMLAnchorElement>, 'href'>\n\ntype TabProps = {\n  id: string\n} & PropsWithChildren\n\ntype TabPanelProps = {\n  _targetId?: string\n} & Omit<HTMLProps<HTMLDivElement>, 'id'>\n\nconst TabList: React.FC<HTMLProps<HTMLUListElement>> = ({\n  children,\n  className,\n  role = 'tablist',\n  ...rest\n}) => {\n  return (\n    <ul className={clsx('nhsuk-tabs__list', className)} role={role} {...rest}>\n      {children}\n    </ul>\n  )\n}\n\nconst TabListItem: React.FC<TabListItemProps> = ({\n  children,\n  className,\n  listItemProps,\n  id,\n  role = 'tab',\n  tabIndex = 0,\n  _targetId,\n  ...rest\n}) => {\n  const { className: listItemClassName, ...restListItemProps } =\n    listItemProps || {}\n\n  const { selectedTab, setSelectedTab } = useTabsContext()\n  const generatedId = useIdWithPrefix('tab-item')\n  const linkId = id || generatedId\n\n  return (\n    <li\n      className={clsx(\n        'nhsuk-tabs__list-item',\n        { 'nhsuk-tabs__list-item--selected': _targetId === selectedTab },\n        listItemClassName,\n      )}\n      role=\"presentation\"\n      {...restListItemProps}\n    >\n      <a\n        className={clsx('nhsuk-tabs__tab', className)}\n        aria-selected={_targetId === selectedTab}\n        role={role}\n        tabIndex={tabIndex}\n        id={linkId}\n        href={`#${_targetId}`}\n        aria-controls={_targetId}\n        {...rest}\n        onClick={() => setSelectedTab(_targetId!)}\n      >\n        {children}\n      </a>\n    </li>\n  )\n}\n\nconst TabPanel: React.FC<TabPanelProps> = ({\n  className,\n  children,\n  role = 'tabpanel',\n  _targetId,\n  ...rest\n}) => {\n  const { selectedTab } = useTabsContext()\n\n  return (\n    <div\n      className={clsx(\n        'nhsuk-tabs__panel',\n        { 'nhsuk-tabs__panel--hidden': _targetId !== selectedTab },\n        className,\n      )}\n      id={_targetId}\n      {...rest}\n      role={role}\n    >\n      {children}\n    </div>\n  )\n}\n\nconst Tab: React.FC<TabProps> = ({ id, children }) => {\n  return children\n}\n\nconst Tabs: Tabs = ({\n  children,\n  className,\n  title,\n  titleProps,\n  listProps = {},\n  ...rest\n}): JSX.Element => {\n  const { className: titleClassName, ...restTitleProps } = titleProps || {}\n\n  const tabs = React.Children.toArray(children).filter(\n    (child) => React.isValidElement(child) && child.type === Tab,\n  ) as ReactElement<TabProps>[]\n\n  const listItems = tabs.flatMap((tab, i) => {\n    const tabChildren = React.Children.toArray(tab.props.children)\n    const tabListItem = tabChildren.find(\n      (child) => React.isValidElement(child) && child.type === TabListItem,\n    ) as ReactElement<TabListItemProps>\n\n    return React.cloneElement(tabListItem, {\n      key: i,\n      _targetId: tab.props.id,\n    })\n  }, []) as ReactElement<TabListItemProps>[]\n\n  const tabPanels = tabs.flatMap((tab, i) => {\n    const tabChildren = React.Children.toArray(tab.props.children)\n    const tabPanel = tabChildren.find(\n      (child) => React.isValidElement(child) && child.type === TabPanel,\n    )\n\n    return React.cloneElement(tabPanel as ReactElement<TabPanelProps>, {\n      key: i,\n      _targetId: tab.props.id,\n      'aria-labelledby': tab.props.id,\n    })\n  }, [])\n\n  const [selectedTab, setSelectedTab] = useState(tabs.at(0)?.props.id ?? '')\n\n  return (\n    <TabsContext.Provider value={{ selectedTab, setSelectedTab }}>\n      <div className={clsx('nhsuk-tabs js-enabled', className)} {...rest}>\n        <h2\n          className={clsx('nhsuk-tabs__title', titleClassName)}\n          {...restTitleProps}\n        >\n          {title}\n        </h2>\n        <TabList {...listProps}>{listItems}</TabList>\n        {tabPanels}\n      </div>\n    </TabsContext.Provider>\n  )\n}\n\nTabs.Title = TabListItem\nTabs.Tab = Tab\nTabs.Panel = TabPanel\n\nTabs.displayName = 'Tabs'\nTabListItem.displayName = 'Tabs.Title'\nTabPanel.displayName = 'Tabs.Panel'\nTab.displayName = 'Tabs.Tab'\n\nexport default Tabs\n"],"names":["TabsContext","createContext","useTabsContext","useContext","TabList","children","className","role","rest","jsx","clsx","TabListItem","listItemProps","id","tabIndex","_targetId","listItemClassName","restListItemProps","selectedTab","setSelectedTab","generatedId","useIdWithPrefix","linkId","TabPanel","Tab","Tabs","title","titleProps","listProps","titleClassName","restTitleProps","tabs","React","child","listItems","tab","i","tabListItem","tabPanels","tabPanel","useState","_a","jsxs"],"mappings":"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"}