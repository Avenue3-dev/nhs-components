{"version":3,"file":"Card-065178db.js","sources":["../../../../packages/nhsuk-frontend-react/src/lib/components/navigation/card/Card.tsx"],"sourcesContent":["import { HTMLProps, createContext, useContext } from 'react'\nimport clsx from 'clsx'\nimport { AsElementLink } from '@/types/link-like'\nimport { AsElementHeadingProps } from '@/types/heading'\nimport { ChevronRightCircleIcon } from '@/icons'\n\ntype Card = {\n  Content: typeof Content\n  Description: typeof Description\n  Heading: typeof Heading\n  Link: typeof Link\n  Image: typeof Image\n  Group: typeof Group\n  GroupItem: typeof GroupItem\n} & React.FC<CardProps>\n\ntype CardProps = {\n  clickable?: boolean\n} & Partial<CardContextValue> &\n  HTMLProps<HTMLDivElement>\n\ntype GroupItemProps = {\n  width?: GroupItemWidth\n} & HTMLProps<HTMLLIElement>\n\ntype HeadingProps = AsElementHeadingProps & HTMLProps<HTMLHeadingElement>\n\ntype CardContextValue = {\n  withChevron: boolean\n  primary: boolean\n  secondary: boolean\n}\n\nexport type GroupItemWidth = 'one-half' | 'one-third' | 'one-quarter'\n\nconst CardContext = createContext<CardContextValue>({\n  withChevron: false,\n  primary: false,\n  secondary: false,\n})\n\nconst Content: React.FC<HTMLProps<HTMLDivElement>> = ({\n  children,\n  className,\n  ...rest\n}) => {\n  const { primary, secondary, withChevron } = useContext(CardContext)\n\n  return (\n    <div\n      className={clsx(\n        'nhsuk-card__content',\n        {\n          'nhsuk-card__content--primary': primary,\n          'nhsuk-card__content--secondary': secondary && !primary,\n        },\n        className,\n      )}\n      {...rest}\n    >\n      {children}\n\n      {withChevron && primary && <ChevronRightCircleIcon />}\n    </div>\n  )\n}\n\nconst Heading: React.FC<HeadingProps> = ({\n  children,\n  className,\n  asElement: Component = 'h2',\n  ...rest\n}) => {\n  return (\n    <Component\n      className={clsx('nhsuk-card__heading nhsuk-heading-m', className)}\n      {...rest}\n    >\n      {children}\n    </Component>\n  )\n}\n\nconst Link: React.FC<AsElementLink<HTMLAnchorElement>> = ({\n  children,\n  className,\n  asElement: Component = 'a',\n  ...rest\n}) => {\n  return (\n    <Component className={clsx('nhsuk-card__link', className)} {...rest}>\n      {children}\n    </Component>\n  )\n}\n\nconst Description: React.FC<HTMLProps<HTMLParagraphElement>> = ({\n  children,\n  className,\n  ...rest\n}) => {\n  return (\n    <p className={clsx('nhsuk-card__description', className)} {...rest}>\n      {children}\n    </p>\n  )\n}\n\nconst Image: React.FC<HTMLProps<HTMLImageElement>> = ({\n  className,\n  alt,\n  ...rest\n}) => {\n  return (\n    <img className={clsx('nhsuk-card__img', className)} alt={alt} {...rest} />\n  )\n}\n\nconst Group: React.FC<HTMLProps<HTMLUListElement>> = ({\n  children,\n  className,\n  ...rest\n}) => {\n  return (\n    <ul\n      className={clsx('nhsuk-grid-row nhsuk-card-group', className)}\n      {...rest}\n    >\n      {children}\n    </ul>\n  )\n}\n\nconst GroupItem: React.FC<GroupItemProps> = ({\n  children,\n  className,\n  width = 'one-half',\n  ...rest\n}) => {\n  return (\n    <li\n      className={clsx(\n        'nhsuk-card-group__item',\n        `nhsuk-grid-column-${width}`,\n        className,\n      )}\n      {...rest}\n    >\n      {children}\n    </li>\n  )\n}\n\n/**\n * Use a card to give users a brief summary of content or a task, often with a link to more detail. You can display a card alongside other cards to group related content or tasks.\n *\n * For more information on when to use this component, go to the [NHS Service Manuals website](https://service-manual.nhs.uk/design-system/components/card).\n *\n * @link https://service-manual.nhs.uk/design-system/components/card\n *\n * @example\n * ```tsx\n * <Card>\n *  <Card.Content>\n *   <Card.Heading>\n *    If you need help now, but itâ€™s not an emergency\n *   </Card.Heading>\n *   <Card.Description>\n *    Go to <a href=\"#site\">111.nhs.uk</a> or <a href=\"#site\">call 111</a>\n *   </Card.Description>\n *  </Card.Content>\n * </Card>\n * ```\n */\nconst Card: Card = ({\n  children,\n  className,\n  clickable,\n  withChevron = false,\n  primary = false,\n  secondary = false,\n  ...rest\n}) => {\n  return (\n    <div\n      className={clsx(\n        'nhsuk-card',\n        {\n          'nhsuk-card--clickable': clickable,\n          'nhsuk-card--secondary': secondary && !primary,\n        },\n        className,\n      )}\n      {...rest}\n    >\n      <CardContext.Provider value={{ withChevron, primary, secondary }}>\n        {children}\n      </CardContext.Provider>\n    </div>\n  )\n}\n\nCardContext.displayName = 'CardContext'\n\nCard.Content = Content\nCard.Description = Description\nCard.Heading = Heading\nCard.Link = Link\nCard.Image = Image\nCard.Group = Group\nCard.GroupItem = GroupItem\n\nCard.displayName = 'Card'\nContent.displayName = 'Card.Content'\nDescription.displayName = 'Card.Description'\nHeading.displayName = 'Card.Heading'\nLink.displayName = 'Card.Link'\nImage.displayName = 'Card.Image'\nGroup.displayName = 'Card.Group'\nGroupItem.displayName = 'Card.GroupItem'\n\nexport default Card\n"],"names":["CardContext","createContext","Content","children","className","rest","primary","secondary","withChevron","useContext","jsxs","clsx","jsx","ChevronRightCircleIcon","Heading","Component","Link","Description","Image","alt","Group","GroupItem","width","Card","clickable"],"mappings":"yPAmCA,MAAAA,EAAAC,EAAAA,cAAA,CAAoD,YAAA,GACrC,QAAA,GACJ,UAAA,EAEX,CAAA,EAEAC,EAAA,CAAA,CAAsD,SAAAC,EACpD,UAAAC,EACA,GAAAC,CAEF,IAAA,CACE,KAAA,CAAA,QAAAC,EAAA,UAAAC,EAAA,YAAAC,CAAA,EAAAC,EAAAA,WAAAT,CAAA,EAEA,OAAAU,EAAA,KACE,MAAC,CAAA,UAAAC,EACY,sBACT,CACA,+BAAAL,EACkC,iCAAAC,GAAA,CAAAD,CACgB,EAClDF,CACA,EACF,GAAAC,EACI,SAAA,CAEHF,EAAAK,GAAAF,GAAAM,MAAAC,EAAA,CAAA,CAAA,CAEkD,CAAA,CAAA,CAGzD,EAEAC,EAAA,CAAA,CAAyC,SAAAX,EACvC,UAAAC,EACA,UAAAW,EAAA,KACuB,GAAAV,CAEzB,IACEO,EAAA,IACEG,EAAC,CAAA,UAAAJ,EAAA,sCAAAP,CAAA,EACiE,GAAAC,EAC5D,SAAAF,CAEH,CAAA,EAKPa,EAAA,CAAA,CAA0D,SAAAb,EACxD,UAAAC,EACA,UAAAW,EAAA,IACuB,GAAAV,CAEzB,IACEO,MAAAG,EAAA,CAAA,UAAAJ,EAAA,mBAAAP,CAAA,EAAA,GAAAC,EAAA,SAAAF,CAAA,CAAA,EAOFc,EAAA,CAAA,CAAgE,SAAAd,EAC9D,UAAAC,EACA,GAAAC,CAEF,IACEO,MAAA,IAAA,CAAA,UAAAD,EAAA,0BAAAP,CAAA,EAAA,GAAAC,EAAA,SAAAF,CAAA,CAAA,EAOFe,EAAA,CAAA,CAAsD,UAAAd,EACpD,IAAAe,EACA,GAAAd,CAEF,IACEO,MAAA,MAAA,CAAA,UAAAD,EAAA,kBAAAP,CAAA,EAAA,IAAAe,EAAA,GAAAd,CAAA,CAAA,EAKFe,EAAA,CAAA,CAAsD,SAAAjB,EACpD,UAAAC,EACA,GAAAC,CAEF,IACEO,EAAA,IACE,KAAC,CAAA,UAAAD,EAAA,kCAAAP,CAAA,EAC6D,GAAAC,EACxD,SAAAF,CAEH,CAAA,EAKPkB,EAAA,CAAA,CAA6C,SAAAlB,EAC3C,UAAAC,EACA,MAAAkB,EAAA,WACQ,GAAAjB,CAEV,IACEO,EAAA,IACE,KAAC,CAAA,UAAAD,EACY,yBACT,qBAAAW,IACqBlB,CACrB,EACF,GAAAC,EACI,SAAAF,CAEH,CAAA,EA0BPoB,EAAA,CAAA,CAAoB,SAAApB,EAClB,UAAAC,EACA,UAAAoB,EACA,YAAAhB,EAAA,GACc,QAAAF,EAAA,GACJ,UAAAC,EAAA,GACE,GAAAF,CAEd,IACEO,EAAA,IACE,MAAC,CAAA,UAAAD,EACY,aACT,CACA,wBAAAa,EAC2B,wBAAAjB,GAAA,CAAAD,CACc,EACzCF,CACA,EACF,GAAAC,EACI,SAAAO,EAAA,IAAAZ,EAAA,SAAA,CAAA,MAAA,CAAA,YAAAQ,EAAA,QAAAF,EAAA,UAAAC,CAAA,EAAA,SAAAJ,CAAA,CAAA,CAIJ,CAAA,EAKNH,EAAA,YAAA,cAEAuB,EAAA,QAAArB,EACAqB,EAAA,YAAAN,EACAM,EAAA,QAAAT,EACAS,EAAA,KAAAP,EACAO,EAAA,MAAAL,EACAK,EAAA,MAAAH,EACAG,EAAA,UAAAF,EAEAE,EAAA,YAAA,OACArB,EAAA,YAAA,eACAe,EAAA,YAAA,mBACAH,EAAA,YAAA,eACAE,EAAA,YAAA,YACAE,EAAA,YAAA,aACAE,EAAA,YAAA,aACAC,EAAA,YAAA;;"}