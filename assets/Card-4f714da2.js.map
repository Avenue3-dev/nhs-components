{"version":3,"file":"Card-4f714da2.js","sources":["../../src/icons/chevron-right-circle/index.tsx","../../src/icons/cross/index.tsx","../../src/icons/tick/index.tsx","../../src/components/navigation/card/Card.tsx"],"sourcesContent":["import { Icon } from '@/types/icon'\nimport clsx from 'clsx'\n\nexport const ChevronRightCircleIcon: React.FC<Icon> = ({\n  width = 27,\n  height = 27,\n  className,\n  ...rest\n}): JSX.Element => {\n  return (\n    <svg\n      className={clsx('nhsuk-icon nhsuk-icon__chevron-right-circle', className)}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      {...rest}\n    >\n      <circle cx=\"13.333\" cy=\"13.333\" r=\"13.333\" fill=\"\" />\n      <g\n        data-name=\"Group 1\"\n        fill=\"none\"\n        stroke=\"#fff\"\n        stroke-linecap=\"round\"\n        stroke-miterlimit=\"10\"\n        stroke-width=\"2.667\"\n      >\n        <path d=\"M15.438 13l-3.771 3.771\" />\n        <path data-name=\"Path\" d=\"M11.667 9.229L15.438 13\" />\n      </g>\n    </svg>\n  )\n}\n","import { Icon } from '@/types/icon'\nimport clsx from 'clsx'\n\nexport const CrossIcon: React.FC<Icon> = ({\n  width = 24,\n  height = 24,\n  className,\n  ...rest\n}): JSX.Element => {\n  return (\n    <svg\n      className={clsx('nhsuk-icon nhsuk-icon__cross', className)}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      aria-hidden=\"true\"\n      height={height}\n      width={width}\n      {...rest}\n    >\n      <path\n        d=\"M17 18.5c-.4 0-.8-.1-1.1-.4l-10-10c-.6-.6-.6-1.6 0-2.1.6-.6 1.5-.6 2.1 0l10 10c.6.6.6 1.5 0 2.1-.3.3-.6.4-1 .4z\"\n        fill=\"#d5281b\"\n      ></path>\n      <path\n        d=\"M7 18.5c-.4 0-.8-.1-1.1-.4-.6-.6-.6-1.5 0-2.1l10-10c.6-.6 1.5-.6 2.1 0 .6.6.6 1.5 0 2.1l-10 10c-.3.3-.6.4-1 .4z\"\n        fill=\"#d5281b\"\n      ></path>\n    </svg>\n  )\n}\n","import { Icon } from '@/types/icon'\nimport clsx from 'clsx'\n\nexport const TickIcon: React.FC<Icon> = ({\n  width = 24,\n  height = 24,\n  className,\n  ...rest\n}): JSX.Element => {\n  return (\n    <svg\n      className={clsx('nhsuk-icon nhsuk-icon__tick', className)}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      aria-hidden=\"true\"\n      width={width}\n      height={height}\n      {...rest}\n    >\n      <path\n        strokeWidth=\"4\"\n        strokeLinecap=\"round\"\n        d=\"M18.4 7.8l-8.5 8.4L5.6 12\"\n        stroke=\"#007f3b\"\n      ></path>\n    </svg>\n  )\n}\n","import { HTMLProps, createContext, useContext } from 'react'\nimport clsx from 'clsx'\nimport { AsElementLink } from '@/types/link-like'\nimport { AsElementHeadingProps } from '@/types/heading'\nimport { ChevronRightCircleIcon } from '@/icons'\n\ntype Card = {\n  Content: typeof Content\n  Description: typeof Description\n  Heading: typeof Heading\n  Link: typeof Link\n  Image: typeof Image\n  Group: typeof Group\n  GroupItem: typeof GroupItem\n} & React.FC<CardProps>\n\ntype CardProps = {\n  clickable?: boolean\n} & Partial<CardContextValue> &\n  HTMLProps<HTMLDivElement>\n\ntype GroupItemProps = {\n  width?: GroupItemWidth\n} & HTMLProps<HTMLLIElement>\n\ntype HeadingProps = AsElementHeadingProps & HTMLProps<HTMLHeadingElement>\n\ntype CardContextValue = {\n  withChevron: boolean\n  primary: boolean\n  secondary: boolean\n}\n\nexport type GroupItemWidth = 'one-half' | 'one-third' | 'one-quarter'\n\nconst CardContext = createContext<CardContextValue>({\n  withChevron: false,\n  primary: false,\n  secondary: false,\n})\n\nconst Content: React.FC<HTMLProps<HTMLDivElement>> = ({\n  children,\n  className,\n  ...rest\n}) => {\n  const { primary, secondary, withChevron } = useContext(CardContext)\n\n  return (\n    <div\n      className={clsx(\n        'nhsuk-card__content',\n        {\n          'nhsuk-card__content--primary': primary,\n          'nhsuk-card__content--secondary': secondary && !primary,\n        },\n        className,\n      )}\n      {...rest}\n    >\n      {children}\n\n      {withChevron && primary && <ChevronRightCircleIcon />}\n    </div>\n  )\n}\n\nconst Heading: React.FC<HeadingProps> = ({\n  children,\n  className,\n  asElement: Component = 'h2',\n  ...rest\n}) => {\n  return (\n    <Component\n      className={clsx('nhsuk-card__heading nhsuk-heading-m', className)}\n      {...rest}\n    >\n      {children}\n    </Component>\n  )\n}\n\nconst Link: React.FC<AsElementLink<HTMLAnchorElement>> = ({\n  children,\n  className,\n  asElement: Component = 'a',\n  ...rest\n}) => {\n  return (\n    <Component className={clsx('nhsuk-card__link', className)} {...rest}>\n      {children}\n    </Component>\n  )\n}\n\nconst Description: React.FC<HTMLProps<HTMLParagraphElement>> = ({\n  children,\n  className,\n  ...rest\n}) => {\n  return (\n    <p className={clsx('nhsuk-card__description', className)} {...rest}>\n      {children}\n    </p>\n  )\n}\n\nconst Image: React.FC<HTMLProps<HTMLImageElement>> = ({\n  className,\n  ...rest\n}) => {\n  return <img className={clsx('nhsuk-card__img', className)} {...rest} />\n}\n\nconst Group: React.FC<HTMLProps<HTMLUListElement>> = ({\n  children,\n  className,\n  ...rest\n}) => {\n  return (\n    <ul\n      className={clsx('nhsuk-grid-row nhsuk-card-group', className)}\n      {...rest}\n    >\n      {children}\n    </ul>\n  )\n}\n\nconst GroupItem: React.FC<GroupItemProps> = ({\n  children,\n  className,\n  width = 'one-half',\n  ...rest\n}) => {\n  return (\n    <li\n      className={clsx(\n        'nhsuk-card-group__item',\n        `nhsuk-grid-column-${width}`,\n        className,\n      )}\n      {...rest}\n    >\n      {children}\n    </li>\n  )\n}\n\n/**\n * Use a card to give users a brief summary of content or a task, often with a link to more detail. You can display a card alongside other cards to group related content or tasks.\n *\n * For more information on when to use this component, go to the [NHS Service Manuals website](https://service-manual.nhs.uk/design-system/components/card).\n *\n * @link https://service-manual.nhs.uk/design-system/components/card\n *\n * @example\n * ```tsx\n * <Card>\n *  <Card.Content>\n *   <Card.Heading>\n *    If you need help now, but itâ€™s not an emergency\n *   </Card.Heading>\n *   <Card.Description>\n *    Go to <a href=\"#site\">111.nhs.uk</a> or <a href=\"#site\">call 111</a>\n *   </Card.Description>\n *  </Card.Content>\n * </Card>\n * ```\n */\nconst Card: Card = ({\n  children,\n  className,\n  clickable,\n  withChevron = false,\n  primary = false,\n  secondary = false,\n  ...rest\n}) => {\n  return (\n    <div\n      className={clsx(\n        'nhsuk-card',\n        {\n          'nhsuk-card--clickable': clickable,\n          'nhsuk-card--secondary': secondary && !primary,\n        },\n        className,\n      )}\n      {...rest}\n    >\n      <CardContext.Provider value={{ withChevron, primary, secondary }}>\n        {children}\n      </CardContext.Provider>\n    </div>\n  )\n}\n\nCardContext.displayName = 'CardContext'\n\nCard.Content = Content\nCard.Description = Description\nCard.Heading = Heading\nCard.Link = Link\nCard.Image = Image\nCard.Group = Group\nCard.GroupItem = GroupItem\n\nCard.displayName = 'Card'\nContent.displayName = 'Card.Content'\nDescription.displayName = 'Card.Description'\nHeading.displayName = 'Card.Heading'\nLink.displayName = 'Card.Link'\nImage.displayName = 'Card.Image'\nGroup.displayName = 'Card.Group'\nGroupItem.displayName = 'Card.GroupItem'\n\nexport default Card\n"],"names":["ChevronRightCircleIcon","width","height","className","rest","jsxs","clsx","jsx","CrossIcon","TickIcon","CardContext","createContext","Content","children","primary","secondary","withChevron","useContext","Heading","Component","Link","Description","Image","Group","GroupItem","Card","clickable"],"mappings":"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"}