{"version":3,"file":"CharacterCount.stories-a9ef3da6.js","sources":["../../../../packages/nhsuk-frontend-react/src/lib/experimental/components/form-elements/character-count/CharacterCount.tsx"],"sourcesContent":["import FormGroup from '@/components/core/form-group/FormGroup'\nimport ErrorMessage from '@/components/form-elements/error-message'\nimport Hint from '@/components/form-elements/hint'\nimport { FormElementProps } from '@/types/form-element-types'\nimport clsx from 'clsx'\nimport {\n  ForwardRefRenderFunction,\n  HTMLProps,\n  forwardRef,\n  useState,\n} from 'react'\n\ntype CharacterCount = Omit<HTMLProps<HTMLTextAreaElement>, 'width'> &\n  FormElementProps & {\n    mode: 'word' | 'character'\n    limit: number\n    countHint: (limit: number) => string\n    countRemaining: (remaining: number) => string\n    countError: (excess: number) => string\n    threshold?: number\n    containerProps?: HTMLProps<HTMLDivElement>\n  }\n\nconst CharacterCount: ForwardRefRenderFunction<\n  HTMLTextAreaElement,\n  CharacterCount\n> = (props, ref): JSX.Element => {\n  const {\n    mode,\n    limit,\n    threshold,\n    containerProps,\n    countError,\n    countHint,\n    countRemaining,\n    ...characterCountRest\n  } = props\n  const { className: containerClassName, ...containerRest } =\n    containerProps || {}\n\n  const [state, setState] = useState({ remaining: limit, thresholdHit: false })\n\n  const onCharacterCountChange = (\n    ev: React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { value } = ev.target\n    const length = mode === 'word' ? value.split(' ').length : value.length\n    const remaining = limit - length\n\n    setState({\n      remaining,\n      thresholdHit: !!threshold && remaining / limit <= threshold / 100,\n    })\n  }\n\n  return (\n    <div\n      className={clsx('nhsuk-character-count', containerClassName)}\n      {...containerRest}\n    >\n      <FormGroup<CharacterCount>\n        {...characterCountRest}\n        inputType=\"textarea\"\n        render={({ id, name, error, className, rows, onChange, ...rest }) => (\n          <>\n            <textarea\n              id={id}\n              name={name}\n              className={clsx(\n                'nhsuk-textarea',\n                'nhsuk-js-character-count',\n                {\n                  'nhsuk-textarea--error': error || state.remaining < 0,\n                },\n                className,\n              )}\n              ref={ref}\n              rows={rows}\n              onChange={(ev) => {\n                onCharacterCountChange(ev)\n                onChange?.(ev)\n              }}\n              {...rest}\n            />\n            <Hint\n              className=\"nhsuk-character-count__message nhsuk-u-visually-hidden\"\n              id={`${id}-info`}\n            >\n              {countHint(limit)}\n            </Hint>\n            {state.remaining < 0 ? (\n              <ErrorMessage\n                className={clsx(\n                  'nhsuk-character-count__message nhsuk-character-count__status',\n                )}\n                aria-hidden=\"true\"\n              >\n                {countError(Math.abs(state.remaining))}\n              </ErrorMessage>\n            ) : (\n              <Hint\n                className={clsx(\n                  'nhsuk-character-count__message nhsuk-character-count__status',\n                  {\n                    'nhsuk-character-count__message--disabled':\n                      !!threshold && !state.thresholdHit,\n                  },\n                )}\n                aria-hidden=\"true\"\n              >\n                {countRemaining(Math.abs(state.remaining))}\n              </Hint>\n            )}\n            <div\n              className=\"nhsuk-character-count__sr-status nhsuk-u-visually-hidden\"\n              aria-live=\"polite\"\n            >\n              {state.remaining < 0\n                ? countError(Math.abs(state.remaining))\n                : countRemaining(Math.abs(state.remaining))}\n            </div>\n          </>\n        )}\n      />\n    </div>\n  )\n}\n\n/**\n * Use textarea to let users enter more than 1 line of text.\n *\n * For more information on when to use this component, go to the [NHS Service Manuals website](https://service-manual.nhs.uk/design-system/components/textarea).\n *\n * @param {CharacterCount} props - The props of the component.\n * @param {React.ForwardedRef<HTMLTextAreaElement>} ref - Optional ref to be passed to the textarea.\n *\n * @example\n * ```tsx\n * <CharacterCount  id=\"example\" label=\"Example\" />\n * ```\n */\nconst CharacterCountForwardRef = forwardRef(CharacterCount)\n\nCharacterCountForwardRef.displayName = 'CharacterCount'\n\nexport default CharacterCountForwardRef\n"],"names":["CharacterCount","props","ref","mode","limit","threshold","containerProps","countError","countHint","countRemaining","characterCountRest","containerClassName","containerRest","state","setState","useState","onCharacterCountChange","ev","value","length","remaining","jsx","clsx","FormGroup","id","name","error","className","rows","onChange","rest","jsxs","Fragment","Hint","ErrorMessage","CharacterCountForwardRef","forwardRef"],"mappings":"2YAuBA,MAAAA,EAAA,CAAAC,EAAAC,IAAA,CAIE,KAAA,CAAM,KAAAC,EACJ,MAAAC,EACA,UAAAC,EACA,eAAAC,EACA,WAAAC,EACA,UAAAC,EACA,eAAAC,EACA,GAAAC,CACG,EAAAT,EAEL,CAAA,UAAAU,EAAA,GAAAC,CAAA,EAAAN,GAAA,GAGA,CAAAO,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,UAAAX,EAAA,aAAA,EAAA,CAAA,EAEAY,EAAAC,GAAA,CAGE,KAAA,CAAA,MAAAC,CAAA,EAAAD,EAAA,OACAE,EAAAhB,IAAA,OAAAe,EAAA,MAAA,GAAA,EAAA,OAAAA,EAAA,OACAE,EAAAhB,EAAAe,EAEAL,EAAA,CAAS,UAAAM,EACP,aAAA,CAAA,CAAAf,GAAAe,EAAAhB,GAAAC,EAAA,GAC8D,CAAA,CAC/D,EAGH,OAAAgB,EAAA,IACE,MAAC,CAAA,UAAAC,EAAA,wBAAAX,CAAA,EAC4D,GAAAC,EACvD,SAAAS,EAAA,IAEJE,EAAC,CAAA,GAAAb,EACK,UAAA,WACM,OAAA,CAAA,CAAA,GAAAc,EAAA,KAAAC,EAAA,MAAAC,EAAA,UAAAC,EAAA,KAAAC,EAAA,SAAAC,EAAA,GAAAC,CAAA,IAAAC,EAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAGNX,EAAA,IAAA,WAAC,CAAA,GAAAG,EACC,KAAAC,EACA,UAAAH,EACW,iBACT,2BACA,CACA,wBAAAI,GAAAb,EAAA,UAAA,CACsD,EACtDc,CACA,EACF,IAAAzB,EACA,KAAA0B,EACA,SAAAX,GAAA,CAEED,EAAAC,CAAA,EACAY,GAAA,MAAAA,EAAAZ,EAAa,EACf,GAAAa,CACI,CAAA,EACNT,EAAA,IACAY,EAAC,CAAA,UAAA,yDACW,GAAA,GAAAT,SACH,SAAAhB,EAAAJ,CAAA,CAES,CAAA,EAClBS,EAAA,UAAA,EAAAQ,EAAA,IAEEa,GAAC,CAAA,UAAAZ,EACY,8DACT,EACF,cAAA,OACY,SAAAf,EAAA,KAAA,IAAAM,EAAA,SAAA,CAAA,CAEyB,CAAA,EAAAQ,EAAA,IAGvCY,EAAC,CAAA,UAAAX,EACY,+DACT,CACA,2CAAA,CAAA,CAAAjB,GAAA,CAAAQ,EAAA,YAE0B,CAC1B,EACF,cAAA,OACY,SAAAJ,EAAA,KAAA,IAAAI,EAAA,SAAA,CAAA,CAE6B,CAAA,EAC3CQ,EAAA,IAEF,MAAC,CAAA,UAAA,2DACW,YAAA,SACA,SAAAR,EAAA,UAAA,EAAAN,EAAA,KAAA,IAAAM,EAAA,SAAA,CAAA,EAAAJ,EAAA,KAAA,IAAAI,EAAA,SAAA,CAAA,CAIkC,CAAA,CAC9C,EAAA,CACF,CAAA,CAEJ,CAAA,CAGN,EAeAsB,EAAAC,EAAAA,WAAApC,CAAA,EAEAmC,EAAA,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}