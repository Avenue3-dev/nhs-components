{"version":3,"file":"Breadcrumb-cf8af239.js","sources":["../../src/components/navigation/breadcrumb/Breadcrumb.tsx"],"sourcesContent":["import React, { HTMLProps, ReactNode } from 'react'\nimport { AsElementLink } from '@/types/link-like'\nimport clsx from 'clsx'\n\ntype BreadcrumbItem = React.FC<AsElementLink<HTMLAnchorElement>>\ntype BreadcrumbBackItem = React.FC<AsElementLink<HTMLAnchorElement>>\n\n/**\n * @param {string} [props.className] - An optional class name to apply to the container.\n * @param {AsElementLink<HTMLAnchorElement>} [props.asElement] - The element to render the link as. Defaults to `a`.\n *\n * @example\n * ```tsx\n * <Breadcrumb.Item href=\"/start\">Home</Breadcrumb.Item>\n * ```\n */\nconst Item: BreadcrumbItem = ({\n  className,\n  children,\n  asElement: Component = 'a',\n  ...rest\n}): JSX.Element => {\n  return (\n    <li className=\"nhsuk-breadcrumb__item\">\n      <Component\n        className={clsx('nhsuk-breadcrumb__link', className)}\n        {...rest}\n      >\n        {children}\n      </Component>\n    </li>\n  )\n}\n\n/**\n *\n * @param {string} [props.className] - An optional class name to apply to the container.\n * @param {AsElementLink<HTMLAnchorElement>} [props.asElement] - The element to render the link as. Defaults to `a`.\n *\n * @example\n * ```tsx\n * <Breadcrumb.Back href=\"/step-2\">Step 2</Breadcrumb.Back>\n * ```\n */\nconst BackItem: BreadcrumbBackItem = ({\n  children,\n  className,\n  asElement: Component = 'a',\n  ...rest\n}): JSX.Element => {\n  return (\n    <p className=\"nhsuk-breadcrumb__back\">\n      <Component\n        className={clsx('nhsuk-breadcrumb__backlink', className)}\n        {...rest}\n      >\n        <span className=\"nhsuk-u-visually-hidden\">Back to &nbsp;</span>\n        {children}\n      </Component>\n    </p>\n  )\n}\n\ntype Breadcrumb = {\n  Item: BreadcrumbItem\n  Back: BreadcrumbBackItem\n} & React.FC<HTMLProps<HTMLDivElement>>\n\ntype Split = {\n  Items: ReactNode[]\n  Back?: ReactNode\n  Others: ReactNode[]\n}\n\n/**\n * Use breadcrumbs to help users understand where they are in the website.\n *\n * For more information on when to use this component, go the [NHS Service Manuals website](https://service-manual.nhs.uk/design-system/components/breadcrumb).\n *\n * @param {string} [props.className] - An optional class name to apply to the container.\n * @param {string} [props.aria-label] - An optional label for the breadcrumb. Defaults to `Breadcrumb`.\n *\n * @example\n * ```tsx\n * <Breadcrumb>\n *  <Breadcrumb.Item href=\"/start\">Home</Breadcrumb.Item>\n *  <Breadcrumb.Item href=\"/step-1\">Step 1</Breadcrumb.Item>\n *  <Breadcrumb.Item href=\"/step-2\">Step 2</Breadcrumb.Item>\n *  <Breadcrumb.Back href=\"/step-2\">Step 2</Breadcrumb.Back>\n * </Breadcrumb>\n */\nconst Breadcrumb: Breadcrumb = ({\n  children,\n  className,\n  'aria-label': ariaLabel = 'Breadcrumb',\n  ...rest\n}): JSX.Element => {\n  const { Items, Back, Others } = React.Children.toArray(\n    children,\n  ).reduce<Split>(\n    (prev, child) => {\n      if (child && typeof child === 'object' && 'type' in child) {\n        if (child.type === Item) {\n          prev.Items.push(child)\n        } else if (child.type === BackItem) {\n          prev.Back = child\n        } else {\n          prev.Others.push(child)\n        }\n      } else {\n        prev.Others.push(child)\n      }\n\n      return prev\n    },\n    { Items: [], Back: undefined, Others: [] },\n  )\n\n  return (\n    <nav\n      className={clsx('nhsuk-breadcrumb', className)}\n      aria-label={ariaLabel}\n      {...rest}\n    >\n      <div className=\"nhsuk-width-container\">\n        <ol className=\"nhsuk-breadcrumb__list\">{Items}</ol>\n        {Back}\n        {Others}\n      </div>\n    </nav>\n  )\n}\n\nBreadcrumb.displayName = 'Breadcrumb'\nItem.displayName = 'Breadcrumb.Item'\nBackItem.displayName = 'Breadcrumb.Back'\n\nBreadcrumb.Back = BackItem\nBreadcrumb.Item = Item\n\nexport default Breadcrumb\n"],"names":["Item","className","children","Component","rest","jsx","clsx","BackItem","jsxs","Breadcrumb","ariaLabel","Items","Back","Others","React","prev","child"],"mappings":"6HAgBA,MAAAA,EAAA,CAAA,CAA8B,UAAAC,EAC5B,SAAAC,EACA,UAAAC,EAAA,IACuB,GAAAC,CAEzB,IACEC,EAAAA,IAAA,KAAA,CAAA,UAAA,yBAAA,SAAAA,EAAA,IAEIF,EAAC,CAAA,UAAAG,EAAA,yBAAAL,CAAA,EACoD,GAAAG,EAC/C,SAAAF,CAEH,CAAA,CAAA,CAAA,EAgBTK,EAAA,CAAA,CAAsC,SAAAL,EACpC,UAAAD,EACA,UAAAE,EAAA,IACuB,GAAAC,CAEzB,IACEC,EAAAA,IAAA,IAAA,CAAA,UAAA,yBAAA,SAAAG,EAAA,KAEIL,EAAC,CAAA,UAAAG,EAAA,6BAAAL,CAAA,EACwD,GAAAG,EACnD,SAAA,CAEJC,EAAA,IAAA,OAAA,CAAA,UAAA,0BAAA,SAAA,YAAA,EAAwDH,CACvD,CAAA,CAAA,CAAA,CAAA,EAkCTO,EAAA,CAAA,CAAgC,SAAAP,EAC9B,UAAAD,EACA,aAAAS,EAAA,aAC0B,GAAAN,CAE5B,IAAA,CACE,KAAA,CAAA,MAAAO,EAAA,KAAAC,EAAA,OAAAC,CAAA,EAAAC,EAAA,SAAA,QAA+CZ,CAC7C,EAAA,OACA,CAAAa,EAAAC,KAEEA,GAAA,OAAAA,GAAA,UAAA,SAAAA,EACEA,EAAA,OAAAhB,EACEe,EAAA,MAAA,KAAAC,CAAA,EAAqBA,EAAA,OAAAT,EAErBQ,EAAA,KAAAC,EAEAD,EAAA,OAAA,KAAAC,CAAA,EAGFD,EAAA,OAAA,KAAAC,CAAA,EAGFD,GACF,CAAA,MAAA,CAAA,EAAA,KAAA,OAAA,OAAA,EAAA,CACyC,EAG3C,OAAAV,EAAA,IACE,MAAC,CAAA,UAAAC,EAAA,mBAAAL,CAAA,EAC8C,aAAAS,EACjC,GAAAN,EACR,SAAAI,EAAA,KAAA,MAAA,CAAA,UAAA,wBAAA,SAAA,CAGFH,EAAA,IAAA,KAAA,CAAA,UAAA,yBAAA,SAAAM,EAAA,EAA8CC,EAC7CC,CACA,EAAA,CACH,CAAA,CAGN,EAEAJ,EAAA,YAAA,aACAT,EAAA,YAAA,kBACAO,EAAA,YAAA,kBAEAE,EAAA,KAAAF,EACAE,EAAA,KAAAT;;"}