{"version":3,"file":"Header-9f92146a.js","sources":["../../../../packages/nhsuk-react-components/src/lib/components/navigation/header/HeaderContext.ts","../../../../packages/nhsuk-react-components/src/lib/assets/nhs-logo.tsx","../../../../packages/nhsuk-react-components/src/lib/components/navigation/header/Header.tsx"],"sourcesContent":["import { createContext, useContext } from 'react'\n\nexport type HeaderContextValue = {\n  orgName?: string\n  orgSplit?: string\n  orgDescriptor?: string\n  serviceName?: string\n  setHasSearch: (toggle: boolean) => void\n  setHasMenuToggle: (toggle: boolean) => void\n  setHasTransactionalLink: (toggle: boolean) => void\n  toggleMenu: () => void\n  toggleSearch: () => void\n  hasTransactionalLink: boolean\n  hasSearch: boolean\n  hasMenuToggle: boolean\n  menuOpen: boolean\n  searchOpen: boolean\n  transactional: boolean\n}\n\nconst HeaderContext = createContext<HeaderContextValue>({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setHasSearch: /* istanbul ignore next */ () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setHasMenuToggle: /* istanbul ignore next */ () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  toggleMenu: /* istanbul ignore next */ () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  toggleSearch: /* istanbul ignore next */ () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setHasTransactionalLink: /* istanbul ignore next */ () => {},\n  hasTransactionalLink: false,\n  hasSearch: false,\n  hasMenuToggle: false,\n  menuOpen: false,\n  searchOpen: false,\n  transactional: false,\n})\n\nexport default HeaderContext\n\nexport const useHeaderContext = () => useContext(HeaderContext)\n","import clsx from 'clsx'\nimport { SVGProps } from 'react'\n\nexport const NhsLogo: React.FC<SVGProps<SVGSVGElement>> = ({\n  className,\n  height = '40',\n  width = '100',\n  ...rest\n}): JSX.Element => {\n  return (\n    <svg\n      className={clsx('nhsuk-logo', className)}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 40 16\"\n      height={height}\n      width={width}\n      {...rest}\n    >\n      <path\n        className=\"nhsuk-logo__background\"\n        fill=\"#005eb8\"\n        d=\"M0 0h40v16H0z\"\n      ></path>\n      <path\n        className=\"nhsuk-logo__text\"\n        fill=\"#fff\"\n        d=\"M3.9 1.5h4.4l2.6 9h.1l1.8-9h3.3l-2.8 13H9l-2.7-9h-.1l-1.8 9H1.1M17.3 1.5h3.6l-1 4.9h4L25 1.5h3.5l-2.7 13h-3.5l1.1-5.6h-4.1l-1.2 5.6h-3.4M37.7 4.4c-.7-.3-1.6-.6-2.9-.6-1.4 0-2.5.2-2.5 1.3 0 1.8 5.1 1.2 5.1 5.1 0 3.6-3.3 4.5-6.4 4.5-1.3 0-2.9-.3-4-.7l.8-2.7c.7.4 2.1.7 3.2.7s2.8-.2 2.8-1.5c0-2.1-5.1-1.3-5.1-5 0-3.4 2.9-4.4 5.8-4.4 1.6 0 3.1.2 4 .6\"\n      ></path>\n    </svg>\n  )\n}\n","import clsx from 'clsx'\nimport React, {\n  ComponentProps,\n  HTMLProps,\n  MouseEventHandler,\n  PropsWithChildren,\n  useEffect,\n  useState,\n} from 'react'\nimport HeaderContext, {\n  HeaderContextValue,\n  useHeaderContext,\n} from './HeaderContext'\nimport { AsElementLink } from '@/types/link-like'\nimport { NhsLogo } from '@/assets/nhs-logo'\nimport { ChevronRightIcon, CloseIcon, SearchIcon } from '@/icons'\nimport Container from '@/components/core/container'\n\ntype Header = {\n  Logo: typeof Logo\n  TransactionalLink: typeof TransactionalServiceName\n  Container: typeof HeaderContainer\n  MenuToggle: typeof MenuToggle\n  Content: typeof HeaderContent\n  Nav: typeof HeaderNav\n  NavItem: typeof NavItem\n  Search: typeof Search\n} & React.FC<HeaderProps>\n\ntype HeaderProps = Partial<{\n  transactional: boolean\n  orgName: string\n  orgSplit: string\n  orgDescriptor: string\n  serviceName: string\n  white: boolean\n}> &\n  HTMLProps<HTMLDivElement> &\n  PropsWithChildren\n\ntype MenuToggleProps = {\n  type?: 'button' | 'submit' | 'reset'\n} & Omit<HTMLProps<HTMLButtonElement>, 'children'>\n\ntype LogoProps = Omit<AsElementLink<HTMLAnchorElement>, 'children'>\n\ntype HeaderNavProps = {\n  containerProps?: ComponentProps<typeof Container>\n} & HTMLProps<HTMLDivElement> &\n  PropsWithChildren\n\ntype NavItemProps = {\n  mobileOnly?: boolean\n} & AsElementLink<HTMLAnchorElement> &\n  PropsWithChildren\n\ntype HeaderContentProps = HTMLProps<HTMLDivElement> & PropsWithChildren\n\ntype ButtonToggleProps = {\n  'data-testid'?: string\n} & Omit<\n  HTMLProps<HTMLButtonElement>,\n  'children' | 'type' | 'onClick' | 'className'\n>\n\ntype SearchProps = {\n  visuallyHiddenText?: string\n  toggleProps?: ButtonToggleProps\n  submitProps?: ButtonToggleProps\n  closeProps?: ButtonToggleProps\n} & Omit<HTMLProps<HTMLInputElement>, 'children'>\n\nconst Logo: React.FC<LogoProps> = ({\n  className,\n  asElement: Component = 'a',\n  ...rest\n}): JSX.Element => {\n  const {\n    orgName,\n    orgDescriptor,\n    orgSplit,\n    serviceName,\n    hasMenuToggle,\n    hasSearch,\n    hasTransactionalLink,\n  } = useHeaderContext()\n\n  const label = orgName\n    ? `${orgName} ${orgSplit} ${orgDescriptor} homepage`\n    : 'NHS homepage'\n\n  return (\n    <div\n      className={clsx('nhsuk-header__logo', {\n        'nhsuk-header__logo--only':\n          !hasMenuToggle && !hasSearch && hasTransactionalLink,\n      })}\n    >\n      <Component\n        className={clsx(\n          'nhsuk-header__link',\n          {\n            'nhsuk-header__link--service': !orgName && serviceName,\n          },\n          className,\n        )}\n        aria-label={label}\n        {...rest}\n      >\n        <NhsLogo />\n        {orgName && (\n          <>\n            <span className=\"nhsuk-organisation-name\">\n              {orgName}\n              {orgSplit && (\n                <span className=\"nhsuk-organisation-name-split\">\n                  {orgSplit}\n                </span>\n              )}\n            </span>\n            {orgDescriptor && (\n              <span className=\"nhsuk-organisation-descriptor\">\n                {orgDescriptor}\n              </span>\n            )}\n          </>\n        )}\n\n        {!hasTransactionalLink && serviceName && (\n          <span className=\"nhsuk-header__service-name\">{serviceName}</span>\n        )}\n      </Component>\n    </div>\n  )\n}\n\nconst TransactionalServiceName: React.FC<\n  Omit<AsElementLink<HTMLAnchorElement>, 'children'>\n> = ({ className, asElement: Component = 'a', ...rest }): JSX.Element => {\n  const { serviceName, setHasTransactionalLink } = useHeaderContext()\n\n  useEffect(() => {\n    setHasTransactionalLink(true)\n\n    return () => setHasTransactionalLink(false)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className=\"nhsuk-header__transactional-service-name\">\n      <Component\n        className={clsx(\n          'nhsuk-header__transactional-service-name--link',\n          className,\n        )}\n        {...rest}\n      >\n        {serviceName}\n      </Component>\n    </div>\n  )\n}\n\nconst MenuToggle: React.FC<MenuToggleProps> = ({\n  className,\n  onClick,\n  ...rest\n}): JSX.Element => {\n  const { toggleMenu, setHasMenuToggle, menuOpen } = useHeaderContext()\n\n  const onToggleClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    toggleMenu()\n    onClick?.(e)\n  }\n\n  useEffect(() => {\n    setHasMenuToggle(true)\n    return () => setHasMenuToggle(false)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className=\"nhsuk-header__menu\">\n      <button\n        className={clsx('nhsuk-header__menu-toggle', className)}\n        aria-label=\"Open menu\"\n        aria-expanded={menuOpen ? 'true' : 'false'}\n        onClick={onToggleClick}\n        {...rest}\n      >\n        Menu\n      </button>\n    </div>\n  )\n}\n\nconst HeaderContainer: React.FC<ComponentProps<typeof Container>> = ({\n  children,\n  className,\n  ...rest\n}): JSX.Element => {\n  return (\n    <Container className={clsx('nhsuk-header__container', className)} {...rest}>\n      {children}\n    </Container>\n  )\n}\n\nconst HeaderContent: React.FC<HeaderContentProps> = ({\n  children,\n  className,\n  id = 'content-header',\n  ...rest\n}): JSX.Element => {\n  const { searchOpen } = useHeaderContext()\n  return (\n    <div\n      className={clsx(\n        'nhsuk-header__content',\n        { 'js-show': searchOpen },\n        className,\n      )}\n      id={id}\n      {...rest}\n    >\n      {children}\n    </div>\n  )\n}\n\nconst HeaderNav: React.FC<HeaderNavProps> = ({\n  children,\n  className,\n  open,\n  role = 'navigation',\n  containerProps = {},\n  ...rest\n}): JSX.Element => {\n  const { menuOpen, toggleMenu } = useHeaderContext()\n\n  return (\n    <nav\n      className={clsx(\n        'nhsuk-header__navigation',\n        {\n          'js-show': open ?? menuOpen,\n        },\n        className,\n      )}\n      aria-label=\"Primary navigation\"\n      aria-labelledby=\"label-navigation\"\n      role={role}\n      {...rest}\n    >\n      <Container {...containerProps}>\n        <p className=\"nhsuk-header__navigation-title\">\n          <span id=\"label-navigation\">Menu</span>\n          <button\n            className=\"nhsuk-header__navigation-close\"\n            id=\"close-menu\"\n            onClick={toggleMenu}\n          >\n            <CloseIcon />\n            <span className=\"nhsuk-u-visually-hidden\">Close menu</span>\n          </button>\n        </p>\n        <ul className=\"nhsuk-header__navigation-list\">{children}</ul>\n      </Container>\n    </nav>\n  )\n}\n\nconst NavItem: React.FC<NavItemProps> = ({\n  children,\n  className,\n  mobileOnly,\n  asElement: Component = 'a',\n  ...rest\n}): JSX.Element => {\n  return (\n    <li\n      className={clsx(\n        'nhsuk-header__navigation-item',\n        { 'nhsuk-header__navigation-item--for-mobile': mobileOnly },\n        className,\n      )}\n    >\n      <Component className=\"nhsuk-header__navigation-link\" {...rest}>\n        {children}\n        <ChevronRightIcon />\n      </Component>\n    </li>\n  )\n}\n\nconst Search: React.FC<SearchProps> = ({\n  className,\n  action = '/search',\n  method = 'get',\n  id = 'search-field',\n  type = 'search',\n  autoComplete = 'off',\n  placeholder = 'Search',\n  role = 'search',\n  visuallyHiddenText = 'Search',\n  toggleProps = {},\n  submitProps = {},\n  closeProps = {},\n  ...rest\n}): JSX.Element => {\n  const { toggleSearch, setHasSearch, searchOpen } = useHeaderContext()\n\n  useEffect(() => {\n    setHasSearch(true)\n\n    return () => setHasSearch(false)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className={clsx('nhsuk-header__search', className)}>\n      <button\n        className={clsx('nhsuk-header__search-toggle', {\n          'is-active': searchOpen,\n        })}\n        onClick={toggleSearch}\n        {...toggleProps}\n      >\n        <span className=\"nhsuk-u-visually-hidden\">{visuallyHiddenText}</span>\n        <SearchIcon />\n      </button>\n      <div\n        className={clsx('nhsuk-header__search-wrap', {\n          'js-show': searchOpen,\n        })}\n      >\n        <form\n          className=\"nhsuk-header__search-form\"\n          action={action}\n          method={method}\n          role={role}\n        >\n          <label className=\"nhsuk-u-visually-hidden\" htmlFor={id}>\n            {visuallyHiddenText}\n          </label>\n          <input\n            className=\"nhsuk-search__input\"\n            id={id}\n            type={type}\n            placeholder={placeholder}\n            autoComplete={autoComplete}\n            {...rest}\n          />\n          <button\n            className=\"nhsuk-search__submit\"\n            type=\"submit\"\n            aria-label=\"Submit search\"\n            {...submitProps}\n          >\n            <SearchIcon />\n          </button>\n          <button\n            className=\"nhsuk-search__close\"\n            type=\"button\"\n            onClick={toggleSearch}\n            {...closeProps}\n          >\n            <CloseIcon />\n            <span className=\"nhsuk-u-visually-hidden\">Close search</span>\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\n/**\n * Use the header to show users they are on an NHS service and help them get started in finding what they need.\n *\n * For more information on when to use this component, go to the [NHS Service Manuals website](https://service-manual.nhs.uk/design-system/components/header).\n *\n * @link https://service-manual.nhs.uk/design-system/components/header\n *\n * @example\n * ```tsx\n * <Header orgName=\"Anytown Anyplace\" orgSplit=\"Anywhere\" orgDescriptor=\"NHS Foundation Trust\">\n *  <Header.Container>\n *   <Header.Logo href=\"/\" />\n *   <Header.Content>\n *    <Header.MenuToggle />\n *   </Header.Content>\n *  </Header.Container>\n *  <Header.Nav>\n *   <Header.NavItem mobileOnly href=\"/\">Home</Header.NavItem>\n *   <Header.NavItem href=\"/service-one\">Service one</Header.NavItem>\n *   <Header.NavItem href=\"/service-two\">Service two</Header.NavItem>\n *  </Header.Nav>\n * </Header>\n * ```\n */\nconst Header: Header = ({\n  children,\n  className,\n  role = 'banner',\n  transactional,\n  orgName,\n  orgSplit,\n  orgDescriptor,\n  serviceName,\n  white,\n  ...rest\n}): JSX.Element => {\n  const [hasMenuToggle, setHasMenuToggle] = useState<boolean>(false)\n  const [menuOpen, toggleMenu] = useState<boolean>(false)\n  const [searchOpen, toggleSearch] = useState<boolean>(false)\n  const [hasSearch, setHasSearch] = useState<boolean>(false)\n  const [hasTransactionalLink, setHasTransactionalLink] =\n    useState<boolean>(false)\n\n  const value: HeaderContextValue = {\n    orgName,\n    orgSplit,\n    orgDescriptor,\n    serviceName,\n    transactional: transactional ?? false,\n    hasSearch,\n    searchOpen,\n    menuOpen,\n    hasMenuToggle,\n    hasTransactionalLink,\n    setHasTransactionalLink,\n    setHasMenuToggle,\n    setHasSearch,\n    toggleMenu: () => toggleMenu(!menuOpen),\n    toggleSearch: () => toggleSearch(!searchOpen),\n  }\n\n  return (\n    <header\n      className={clsx(\n        'nhsuk-header',\n        {\n          'nhsuk-header--transactional': transactional,\n          'nhsuk-header--organisation': orgName,\n          'nhsuk-header--white': white,\n        },\n        className,\n      )}\n      role={role}\n      {...rest}\n    >\n      <HeaderContext.Provider value={value}>{children}</HeaderContext.Provider>\n    </header>\n  )\n}\n\nHeader.Container = HeaderContainer\nHeader.Logo = Logo\nHeader.TransactionalLink = TransactionalServiceName\nHeader.MenuToggle = MenuToggle\nHeader.Content = HeaderContent\nHeader.Nav = HeaderNav\nHeader.NavItem = NavItem\nHeader.Search = Search\n\nHeader.displayName = 'Header'\nHeaderContainer.displayName = 'Header.Container'\nLogo.displayName = 'Header.Logo'\nTransactionalServiceName.displayName = 'Header.TransactionalLink'\nMenuToggle.displayName = 'Header.MenuToggle'\nHeaderContent.displayName = 'Header.Content'\nHeaderNav.displayName = 'Header.Nav'\nNavItem.displayName = 'Header.NavItem'\nSearch.displayName = 'Header.Search'\n\nexport default Header\n"],"names":["HeaderContext","createContext","useHeaderContext","useContext","NhsLogo","className","height","width","rest","jsxs","clsx","jsx","Logo","Component","orgName","orgDescriptor","orgSplit","serviceName","hasMenuToggle","hasSearch","hasTransactionalLink","label","Fragment","TransactionalServiceName","setHasTransactionalLink","useEffect","MenuToggle","onClick","toggleMenu","setHasMenuToggle","menuOpen","onToggleClick","e","HeaderContainer","children","Container","HeaderContent","id","searchOpen","HeaderNav","open","role","containerProps","CloseIcon","NavItem","mobileOnly","ChevronRightIcon","Search","action","method","type","autoComplete","placeholder","visuallyHiddenText","toggleProps","submitProps","closeProps","toggleSearch","setHasSearch","SearchIcon","Header","transactional","white","useState","value"],"mappings":"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"}